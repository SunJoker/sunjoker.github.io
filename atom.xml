<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sunjoker.github.io/</id>
    <title>PP&apos;s Blog</title>
    <updated>2019-10-18T16:15:48.288Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sunjoker.github.io/"/>
    <link rel="self" href="https://sunjoker.github.io//atom.xml"/>
    <subtitle>Blog</subtitle>
    <logo>https://sunjoker.github.io//images/avatar.png</logo>
    <icon>https://sunjoker.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, PP&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[MySQL数据库杂记]]></title>
        <id>https://sunjoker.github.io//post/mysql-shu-ju-ku-za-ji</id>
        <link href="https://sunjoker.github.io//post/mysql-shu-ju-ku-za-ji">
        </link>
        <updated>2019-10-18T14:54:54.000Z</updated>
        <summary type="html"><![CDATA[<p>一篇关于MySQL索引和其他琐碎的知识点总结😜</p>
]]></summary>
        <content type="html"><![CDATA[<p>一篇关于MySQL索引和其他琐碎的知识点总结😜</p>
<!-- more -->
<blockquote>
<p>各种各样的小知识点(视频看到最后的总结)🙃</p>
</blockquote>
<ol>
<li>复杂筛选</li>
</ol>
<blockquote>
<p>使用SQL添加筛选条件时，如果筛选条件涉及到分组属性(如：COUNT,MAX,MIN,AVG等)，使用having在group by后做筛选，其他情况使用where。</p>
</blockquote>
<hr>
<ol start="2">
<li>SQL性能分析相关</li>
</ol>
<blockquote>
<p>使用explain进行SQL性能分析时 ，type关键字表示性能，显示查询使用了何种类型：从最好到最差依次是：system&gt;const&gt;eq_ref&gt;ref&gt;range&gt;index&gt;all</p>
</blockquote>
<hr>
<ol start="3">
<li>如何保证索引的有效性</li>
</ol>
<ul>
<li>全值匹配</li>
<li>最佳左前缀法则</li>
<li>不要在索引列上做任何操作(计算、函数等)</li>
<li>存储引擎不能使用索引中范围条件右边的列</li>
<li>尽量使用覆盖索引的查询，减少<font color=red>select *</font></li>
<li>MySQL在使用<font color=red>!=</font>或<font color=red>&lt;&gt;</font>时，无法使用索引导致全表扫描</li>
<li><font color=red>is null</font>，<font color=red>is not null</font>也无法使用索引</li>
<li>like以通配符开始('%aa...')MySQL索引也会失效，导致全表扫描</li>
<li>字符串不加单引号，索引失效</li>
<li>少用<font color=orange>or</font>，用它来连接时索引会失效</li>
</ul>
<hr>
<ol start="4">
<li>小表驱动大表优化原则(小的数据集驱动大的数据集)🤞</li>
</ol>
<blockquote>
<pre><code>  select * from A where id in (select id from B)  
  等价于  
  for select id from B  
  for select * from A where A.id = B.id    
</code></pre>
</blockquote>
<ul>
<li>
<h3 id="font-colorgreen当b的数据集小于a的数据集时用in优于exists"><font color=green>当B的数据集小于A的数据集时，用in优于exists。</h3>
</li>
</ul>
<blockquote>
<pre><code>  select * from A where exists (select 1 from B where B.id = A.id)  
  等价于  
  for select * from A  
  for select * from B where B.id = A.id
</code></pre>
</blockquote>
<ul>
<li>
<h3 id="当a的数据集小于b的数据集时用exists优于in-font">当A的数据集小于B的数据集时，用exists优于in。</font></h3>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL存储过程]]></title>
        <id>https://sunjoker.github.io//post/mysql-cun-chu-guo-cheng</id>
        <link href="https://sunjoker.github.io//post/mysql-cun-chu-guo-cheng">
        </link>
        <updated>2019-10-04T09:07:27.000Z</updated>
        <summary type="html"><![CDATA[<p>一篇关于MySQL存储过程创建的知识点总结</p>
]]></summary>
        <content type="html"><![CDATA[<p>一篇关于MySQL存储过程创建的知识点总结</p>
<!-- more -->
<blockquote>
<p>关于MySQL的存储过程😇</p>
</blockquote>
<h2 id="创建存储过程">创建存储过程</h2>
<h3 id="语法">语法：</h3>
<pre><code>CREATE PROCEDURE 存储过程名 (参数列表)
BEGIN
    SQL语句主体
END
</code></pre>
<h3 id="参数列表的注意点">参数列表的注意点：</h3>
<pre><code>参数列表的参数有三种格式：IN/OUT/INOUT 参数名 参数类型
- IN-传入参数 
- OUT-传出参数	
- INOUT-既可作为传入参数也可以作为传出参数
</code></pre>
<h3 id="声明局部变量">声明局部变量：</h3>
<pre><code>DECLARE 参数名 数据类型 DEFAULT 默认值
例子：DECLARE m INT DEFAULT 1
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://sunjoker.github.io//post/hello-gridea</id>
        <link href="https://sunjoker.github.io//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>